library(reshape2)
library(car)
library(readxl)
library(ggplot2)
library(tidyverse)
library(multcomp)
plot(cooks.distance(ifit2))
library(reshape2)
library(car)
library(readxl)
library(ggplot2)
library(tidyverse)
library(multcomp)
pets <- read.csv('./Dataset/cleaned_pets_data.csv')
pets <- pets[c('Time_Spent', 'Age', 'Group')]
#70/30 split
train <- pets[1:1145,]
test <- pets[1145:1636,]
#Set as factor
train$Group <- factor(train$Group,levels=c("Hounding","Toy","Working", "Terrier", "Herding","Sporting"))
contrasts(train$Group) <- contr.sum(6) #Creates the effect codings
#contrasts(train$Group)
attach(train)
summary(Time_Spent)
summary(Group)
summary(Age)
#Log the response and age variable
train$Time_Spent <- log(train$Time_Spent, 10)
train$Age <- log(train$Age, 10)
train[mapply(is.infinite, train)] <- 0
colnames(train)[c(1,2)] <- c('log_Time_Spent', 'log_Age')
attach(train)
##Lets go through constant shift model first
aov1 <- aov(log_Time_Spent ~ log_Age + Group, data=train)
coef(aov1)
Anova(aov1, type=3)
fit1 <- lm(log_Time_Spent ~ log_Age + Group, data=train)
summary(fit1)
#Interaction term
#Do add weights
iaov <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, data=train)
coef(iaov)
#F-test suggest interaction term is useful
Anova(iaov, type=3)
ifit <- lm(log_Time_Spent ~ log_Age + Group + log_Age*Group, data=train)
summary(ifit)
#Levene's Test
sresa <- rstandard(ifit)
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train))
#WLS With Interaction
groupsd <- sapply(split(sresa,train$Group),sd)
iwt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls4 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt, data=train)
coef(aov_wls4)
ifit2 <- lm(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt, data=train)
summary(ifit2)
#Levene's Test
sresa <- rstandard(ifit2)
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train))
plot(ifit2)
#There are clear outliers
std_residual <- data.frame(abs(rstandard(ifit2)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.ifit2., decreasing=TRUE),][2]
print.data.frame(std_residual)
print.data.frame(train[c(rownames(head(std_residual, 14))),])
#Leverage Points
#We're looking at hi > 2.5(11+1)/1126 which is hi > 0.026 right now
hatvalues <- data.frame(hatvalues(ifit2))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.ifit2., decreasing=TRUE),][2]
print.data.frame(hatvalues)
#0 leverage points
print.data.frame(train[c(rownames(head(hatvalues, 50))),])
plot(cooks.distance(ifit2))
cooksd <- data.frame(cooks.distance(ifit2))
cooksd <- tibble::rowid_to_column(cooksd, "ID")
cooksd <- cooksd[order(cooksd$cooks.distance.ifit2., decreasing=TRUE),][2]
print.data.frame(cooksd)
print.data.frame(train[c(rownames(head(cooksd, 9))),])
print.data.frame(train[train$row_id %in% c(as.numeric(rownames(head(cooksd, 9)))),])
print.data.frame(train[c(rownames(head(cooksd, 9))),])
