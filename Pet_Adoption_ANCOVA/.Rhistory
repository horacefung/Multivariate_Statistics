#Levene's Test
sresa <- rstandard(ifit)
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train))
check <- cbind(train, sresa)
colnames(check)[4] <- c('std_residual')
ggplot(data=check, aes(x=Group, y=sresa)) + geom_boxplot() + ggtitle('Standardized Residuals vs Breed')
#WLS With Interaction
groupsd <- sapply(split(sresa,train$Group),sd)
iwt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls4 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt, data=train)
coef(aov_wls4)
ifit2 <- lm(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt, data=train)
summary(ifit2)
#Levene's Test
sresa <- rstandard(ifit2)
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train))
check <- cbind(train, sresa)
colnames(check)[4] <- c('std_residual')
ggplot(data=check, aes(x=Group, y=sresa)) + geom_boxplot() + ggtitle('Standardized Residuals vs Breed')
plot(ifit2)
#There are clear outliers
std_residual <- data.frame(abs(rstandard(ifit2)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.ifit2., decreasing=TRUE),][2]
print.data.frame(std_residual)
print.data.frame(train[c(rownames(head(std_residual, 14))),])
#Leverage Points
#We're looking at hi > 2.5(11+1)/1145 which is hi > 0.026 right now
hatvalues <- data.frame(hatvalues(ifit2))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.ifit2., decreasing=TRUE),][2]
print.data.frame(hatvalues)
#0 leverage points
print.data.frame(train[c(rownames(head(hatvalues, 50))),])
plot(cooks.distance(ifit2))
cooksd <- data.frame(cooks.distance(ifit2))
cooksd <- tibble::rowid_to_column(cooksd, "ID")
cooksd <- cooksd[order(cooksd$cooks.distance.ifit2., decreasing=TRUE),][2]
print.data.frame(cooksd)
print.data.frame(train[c(rownames(head(cooksd, 9))),])
train$row_id <- seq.int(nrow(train))
itrain2 <- train[!train$row_id %in% c(as.numeric(rownames(head(std_residual, 14)))),]
itrain2 <- itrain2[!itrain2$row_id %in% c(as.numeric(rownames(head(hatvalues, 50)))),]
#itrain2 <- itrain2[!itrain2$row_id %in% c(as.numeric(rownames(head(cooksd, 9)))),]
itrain2$row_id <- seq.int(nrow(itrain2)) #need to reindex
iaov2 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, data=itrain2)
sresa = rstandard(iaov2)
groupsd <- sapply(split(sresa,itrain2$Group),sd)
iwt2 <- 1/(groupsd[as.numeric(itrain2$Group)]^2)
iaov_wls2 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt2, data=itrain2)
coef(iaov_wls2)
ifit3 <- lm(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt2, data=itrain2)
summary(ifit3)
#There are clear outliers
std_residual <- data.frame(abs(rstandard(ifit3)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.ifit3., decreasing=TRUE),][2]
print.data.frame(std_residual)
print.data.frame(itrain2[itrain2$row_id %in% c(as.numeric(rownames(head(std_residual, 7)))),])
#Leverage Points
#We're looking at hi > 2.5(11+1)/1081 which is hi > 0.028 right now
hatvalues <- data.frame(hatvalues(ifit3))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.ifit3., decreasing=TRUE),][2]
print.data.frame(hatvalues)
itrain3 <- itrain2[!itrain2$row_id %in% c(as.numeric(rownames(head(std_residual, 7)))),]
itrain3 <- itrain3[!itrain3$row_id %in% c(as.numeric(rownames(head(hatvalues, 34)))),]
#itrain3 <- itrain2[!itrain2$row_id %in% c(as.numeric(rownames(head(cooksd, 9)))),]
itrain3$row_id <- seq.int(nrow(itrain3)) #need to reindex
iaov3 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, data=itrain3)
sresa = rstandard(iaov3)
groupsd <- sapply(split(sresa,itrain3$Group),sd)
iwt3 <- 1/(groupsd[as.numeric(itrain3$Group)]^2)
iaov_wls3 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt3, data=itrain3)
coef(iaov_wls3)
ifit4 <- lm(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt3, data=itrain3)
summary(ifit4)
#There are clear outliers
std_residual <- data.frame(abs(rstandard(ifit4)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.ifit4., decreasing=TRUE),][2]
print.data.frame(std_residual)
#Leverage Points
#We're looking at hi > 2.5(11+1)/1037 which is hi > 0.029 right now
hatvalues <- data.frame(hatvalues(ifit4))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.ifit4., decreasing=TRUE),][2]
print.data.frame(hatvalues)
itrain4 <- itrain3[!itrain3$row_id %in% c(as.numeric(rownames(head(std_residual, 7)))),]
#itrain4 <- itrain4[!itrain4$row_id %in% c(as.numeric(rownames(head(hatvalues, 34)))),]
itrain4 <- itrain4[!itrain4$row_id %in% c(as.numeric(rownames(head(cooksd, 1)))),]
itrain4$row_id <- seq.int(nrow(itrain4)) #need to reindex
iaov4 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, data=itrain4)
sresa = rstandard(iaov4)
groupsd <- sapply(split(sresa,itrain4$Group),sd)
iwt4 <- 1/(groupsd[as.numeric(itrain4$Group)]^2)
iaov_wls4 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt4, data=itrain4)
coef(iaov_wls4)
ifit5 <- lm(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt4, data=itrain4)
summary(ifit5)
std_residual <- data.frame(abs(rstandard(ifit5)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.ifit5., decreasing=TRUE),][2]
print.data.frame(std_residual)
std_residual <- data.frame(abs(rstandard(ifit5)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.ifit5., decreasing=TRUE),][2]
print.data.frame(std_residual)
#Leverage Points
#We're looking at hi > 2.5(11+1)/997 which is hi > 0.03 right now
hatvalues <- data.frame(hatvalues(ifit5))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.ifit5., decreasing=TRUE),][2]
print.data.frame(hatvalues)
cooksd <- data.frame(cooks.distance(ifit5))
cooksd <- tibble::rowid_to_column(cooksd, "ID")
cooksd <- cooksd[order(cooksd$cooks.distance.ifit5., decreasing=TRUE),][2]
print.data.frame(cooksd)
itrain5 <- itrain4[!itrain4$row_id %in% c(as.numeric(rownames(head(std_residual, 5)))),]
#itrain5 <- itrain5[!itrain5$row_id %in% c(as.numeric(rownames(head(hatvalues, 68)))),]
itrain5 <- itrain5[!itrain5$row_id %in% c(as.numeric(rownames(head(cooksd, 2)))),]
itrain5$row_id <- seq.int(nrow(itrain5)) #need to reindex
itrain5 <- itrain5[complete.cases(itrain5),]
iaov6 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, data=itrain5)
sresa = rstandard(iaov6)
groupsd <- sapply(split(sresa,itrain5$Group),sd)
iwt5 <- 1/(groupsd[as.numeric(itrain5$Group)]^2)
iaov_wls5 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt5, data=itrain5)
coef(iaov_wls5)
ifit6 <- lm(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt5, data=itrain5)
summary(ifit6)
plot(ifit6)
std_residual <- data.frame(abs(rstandard(ifit6)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.ifit6., decreasing=TRUE),][2]
print.data.frame(std_residual)
print.data.frame(itrain5[itrain5$row_id %in% c(as.numeric(rownames(head(std_residual, 7)))),])
#Leverage Points
#We're looking at hi > 2.5(11+1)/955 which is hi > 0.032 right now
hatvalues <- data.frame(hatvalues(ifit6))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.ifit6., decreasing=TRUE),][2]
print.data.frame(hatvalues)
#0 leverage points
print.data.frame(itrain5[itrain5$row_id %in% c(as.numeric(rownames(head(hatvalues, 5)))),])
cooksd <- data.frame(cooks.distance(ifit6))
cooksd <- tibble::rowid_to_column(cooksd, "ID")
cooksd <- cooksd[order(cooksd$cooks.distance.ifit6., decreasing=TRUE),][2]
print.data.frame(cooksd)
plot(cooks.distance(ifit6))
sresa = rstandard(ifit6)
#Levene's Test
absres <- abs(sresa)
anova(lm(absres ~ itrain5$Group, data=itrain5))
check <- cbind(itrain5, sresa)
ggplot(data=check, aes(x=Group, y=sresa)) + geom_boxplot() + ggtitle('Standardized Residuals vs Breed')
ggplot(data=check, aes(x=log_Age, y=sresa)) + geom_point() + ggtitle('Standardized Residuals vs Breed')
#F-test suggest interaction term is useful
Anova(ifit6, type=3)
library(effects)
plot(effect(term="log_Age*Group", mod=ifit6, xlevels=100), multiline=TRUE)
#F-test suggest interaction term is useful
Anova(ifit6, type=3)
simple <- lm(log_Time_Spent ~ log_Age, data=train)
summary(simple)
#Set as factor
test2 <- test
test2$Group <- factor(test2$Group,levels=c("Hounding","Toy","Working", "Terrier", "Herding","Sporting"))
contrasts(test2$Group) <- contr.sum(6) #Creates the effect codings
contrasts(test2$Group)
#Log the response and age variable
test2$Time_Spent <- log(test2$Time_Spent, 10)
test2$Age <- log(test2$Age, 10)
test2[mapply(is.infinite, test2)] <- 0
colnames(test2)[c(1,2)] <- c('log_Time_Spent', 'log_Age')
iaov6 <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, data=test2)
sresa = rstandard(iaov6)
groupsd <- sapply(split(sresa,test2$Group),sd)
iwt6 <- 1/(groupsd[as.numeric(test2$Group)]^2)
predictions <- cbind(predict(ifit6, test2, interval="predict", level=0.95, weights =iwt6 ), test2[1])
print.data.frame(predictions)
predictions[1] <- 10**predictions[1]
predictions[2] <- 10**predictions[2]
predictions[3] <- 10**predictions[3]
predictions[4] <- 10**predictions[4]
print.data.frame(predictions)
#A typical dog is 82.38 months old (6.865 years)
#Hounding breed for a typical s
lastf <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, weight=iwt6, data=itrain6)
write.csv(predictions, './Dataset/full_predictions.csv')
#Clear global environment
ls()
remove(list = ls())
gc()
library(reshape2)
library(car)
library(readxl)
library(ggplot2)
library(tidyverse)
library(multcomp)
pets <- read.csv('./Dataset/cleaned_pets_data.csv')
pets <- pets[c('Time_Spent', 'Age', 'Group')]
train <- pets[1:1145,]
#Set as factor
train$Group <- factor(train$Group,levels=c("Hounding","Toy","Working", "Terrier", "Herding","Sporting"))
contrasts(train$Group) <- contr.sum(6) #Creates the effect codings
#contrasts(train$Group)
attach(train)
summary(Time_Spent)
summary(Group)
summary(Age)
#Log the response and age variable
train$Time_Spent <- log(train$Time_Spent, 10)
train$Age <- log(train$Age, 10)
train[mapply(is.infinite, train)] <- 0
colnames(train)[c(1,2)] <- c('log_Time_Spent', 'log_Age')
attach(train)
##Lets go through constant shift model first
aov1 <- aov(log_Time_Spent ~ log_Age + Group, data=train)
coef(aov1)
Anova(aov1, type=3)
fit1 <- lm(log_Time_Spent ~ log_Age + Group, data=train)
summary(fit1)
#A typical dog is 82.38 months old (6.865 years)
#Hounding breed for a typical s
model.tables(aov1,type = 'means', cterms="Group")
model.tables(aov1,cterms="Group")$tables$Group+coef(aov1)[1]+coef(aov1)[2]*mean(log_Age)
sapply(split(log_Time_Spent,Group),summary)
##Ok we want to check variance of residuals now. Lets do a Levenes test + plot of category vs std_residuals
sresa = rstandard(aov1)
#Levene's Test
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train))
check <- cbind(train, sresa)
#colnames(check)[4] <- c('std_residual')
print.data.frame(check)
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
wt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls <- aov(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
coef(aov_wls)
Anova(aov_wls, type=3)
train$row_id <- seq.int(nrow(train)) #need to reindex
fit2 <- lm(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
summary(fit2)
sresa = rstandard(fit2)
#Levene's Test
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train))
#Standardized residuals
#We're looking at |e| > 2.5
std_residual <- data.frame(abs(rstandard(fit2)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.fit2., decreasing=TRUE),][2]
print.data.frame(std_residual)
print.data.frame(train[c(rownames(head(std_residual, 9))),])
#Leverage Points
#We're looking at hi > 2.5(6+1)/1145 which is hi > 0.015 right now
hatvalues <- data.frame(hatvalues(fit2))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.fit2., decreasing=TRUE),][2]
print.data.frame(hatvalues)
#Leverage Points
#We're looking at hi > 2.5(6+1)/1145 which is hi > 0.015 right now
hatvalues <- data.frame(hatvalues(fit2))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.fit2., decreasing=TRUE),][2]
print.data.frame(hatvalues)
#0 leverage points
#print.data.frame(train[c(rownames(head(hatvalues, 0))),])
cooksd <- data.frame(cooks.distance(fit2))
cooksd <- tibble::rowid_to_column(cooksd, "ID")
cooksd <- cooksd[order(cooksd$cooks.distance.fit2., decreasing=TRUE),][2]
plot(cooks.distance(fit2))
train2 <- train[!train$row_id %in% c(as.numeric(rownames(head(std_residual, 9)))),]
#train2 <- train2[!train2$row_id %in% c(as.numeric(rownames(head(hatvalues, 34)))),]
#train2 <- train2[!train2$row_id %in% c(as.numeric(rownames(head(cooksd, 2)))),]
train2$row_id <- seq.int(nrow(train2)) #need to reindex
#Get the weights
aov2 <- aov(log_Time_Spent ~ log_Age + Group, data=train2)
sresa = rstandard(aov2)
groupsd <- sapply(split(sresa,train2$Group),sd)
wt2 <- 1/(groupsd[as.numeric(train2$Group)]^2)
aov_wls2 <- aov(log_Time_Spent ~ log_Age + Group, weight=wt2, data=train2)
coef(aov_wls2)
Anova(aov_wls2, type=3)
fit3 <- lm(log_Time_Spent ~ log_Age + Group, weight=wt2, data=train2)
summary(fit3)
sresa = rstandard(fit3)
#Levene's Test
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train2))
#Standardized residuals
#We're looking at |e| > 2.5
std_residual <- data.frame(abs(rstandard(fit3)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.fit3., decreasing=TRUE),][2]
print.data.frame(std_residual)
#Leverage Points
#We're looking at hi > 2.5(6+1)/1136 which is hi > 0.015 right now
hatvalues <- data.frame(hatvalues(fit3))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.fit3., decreasing=TRUE),][2]
print.data.frame(hatvalues)
cooksd <- data.frame(cooks.distance(fit3))
cooksd <- tibble::rowid_to_column(cooksd, "ID")
cooksd <- cooksd[order(cooksd$cooks.distance.fit3., decreasing=TRUE),][2]
plot(cooks.distance(fit3))
train3 <- train2[!train2$row_id %in% c(as.numeric(rownames(head(std_residual, 7)))),]
#train2 <- train2[!train2$row_id %in% c(as.numeric(rownames(head(hatvalues, 34)))),]
#train2 <- train2[!train2$row_id %in% c(as.numeric(rownames(head(cooksd, 2)))),]
train3$row_id <- seq.int(nrow(train3)) #need to reindex
aov3 <- aov(log_Time_Spent ~ log_Age + Group, data=train3)
sresa = rstandard(aov3)
groupsd <- sapply(split(sresa,train3$Group),sd)
wt3 <- 1/(groupsd[as.numeric(train3$Group)]^2)
aov_wls3 <- aov(log_Time_Spent ~ log_Age + Group, weight=wt3, data=train3)
coef(aov_wls3)
Anova(aov_wls3, type=3)
fit4 <- lm(log_Time_Spent ~ log_Age + Group, weight=wt3, data=train3)
summary(fit4)
#Levene's Test
sresa = rstandard(fit4)
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train3))
std_residual <- data.frame(abs(rstandard(fit4)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.fit4., decreasing=TRUE),][2]
print.data.frame(std_residual)
print.data.frame(train3[c(rownames(head(std_residual, 3))),])
train4 <- train3[!train3$row_id %in% c(as.numeric(rownames(head(std_residual, 3)))),]
train4$row_id <- seq.int(nrow(train4)) #need to reindex
aov4 <- aov(log_Time_Spent ~ log_Age + Group, data=train4)
sresa = rstandard(aov4)
groupsd <- sapply(split(sresa,train4$Group),sd)
wt4 <- 1/(groupsd[as.numeric(train4$Group)]^2)
aov_wls4 <- aov(log_Time_Spent ~ log_Age + Group, weight=wt4, data=train4)
coef(aov_wls4)
Anova(aov_wls4, type=3)
fit5 <- lm(log_Time_Spent ~ log_Age + Group, weight=wt4, data=train4)
summary(fit5)
#Levene
sresa <- rstandard(fit5)
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train4))
std_residual <- data.frame(abs(rstandard(fit5)))
std_residual <- tibble::rowid_to_column(std_residual, "ID")
std_residual <- std_residual[order(std_residual$abs.rstandard.fit5., decreasing=TRUE),][2]
print.data.frame(std_residual)
#Leverage Points
#We're looking at hi > 2.5(6+1)/1136 which is hi > 0.015 right now
hatvalues <- data.frame(hatvalues(fit5))
hatvalues <- tibble::rowid_to_column(hatvalues, "ID")
hatvalues <- hatvalues[order(hatvalues$hatvalues.fit5., decreasing=TRUE),][2]
print.data.frame(hatvalues)
cooksd <- data.frame(cooks.distance(fit5))
cooksd <- tibble::rowid_to_column(cooksd, "ID")
cooksd <- cooksd[order(cooksd$cooks.distance.fit5., decreasing=TRUE),][2]
plot(cooks.distance(fit5))
#Set as factor
test2 <- test
#70/30 split
train <- pets[1:1145,]
test <- pets[1145:1636,]
summary(Time_Spent)
summary(Group)
summary(Age)
##Lets go through constant shift model first
aov1 <- aov(log_Time_Spent ~ log_Age + Group, data=train)
coef(aov1)
#70/30 split
train <- pets[1:1145,]
test <- pets[1145:1636,]
#Set as factor
train$Group <- factor(train$Group,levels=c("Hounding","Toy","Working", "Terrier", "Herding","Sporting"))
contrasts(train$Group) <- contr.sum(6) #Creates the effect codings
#contrasts(train$Group)
attach(train)
#Log the response and age variable
train$Time_Spent <- log(train$Time_Spent, 10)
train$Age <- log(train$Age, 10)
train[mapply(is.infinite, train)] <- 0
colnames(train)[c(1,2)] <- c('log_Time_Spent', 'log_Age')
attach(train)
##Lets go through constant shift model first
aov1 <- aov(log_Time_Spent ~ log_Age + Group, data=train)
coef(aov1)
Anova(aov1, type=3)
fit1 <- lm(log_Time_Spent ~ log_Age + Group, data=train)
summary(fit1)
#Set as factor
test2 <- test
test2$Group <- factor(test2$Group,levels=c("Hounding","Toy","Working", "Terrier", "Herding","Sporting"))
contrasts(test2$Group) <- contr.sum(6) #Creates the effect codings
contrasts(test2$Group)
#Log the response and age variable
test2$Time_Spent <- log(test2$Time_Spent, 10)
test2$Age <- log(test2$Age, 10)
test2[mapply(is.infinite, test2)] <- 0
colnames(test2)[c(1,2)] <- c('log_Time_Spent', 'log_Age')
aovf <- aov(log_Time_Spent ~ log_Age + Group + log_Age*Group, data=test2)
sresa = rstandard(aovf)
groupsd <- sapply(split(sresa,test2$Group),sd)
wtf <- 1/(groupsd[as.numeric(test2$Group)]^2)
predictions <- cbind(predict(fit5, test2, interval="predict", level=0.95, weights =wtf ), test2[1])
print.data.frame(predictions)
predictions[1] <- 10**predictions[1]
predictions[2] <- 10**predictions[2]
predictions[3] <- 10**predictions[3]
predictions[4] <- 10**predictions[4]
print.data.frame(predictions)
write.csv(predictions, './Dataset/constant_shift_predictions.csv')
#Clear global environment
ls()
remove(list = ls())
gc()
library(reshape2)
library(car)
library(readxl)
library(ggplot2)
library(tidyverse)
library(multcomp)
pets <- read.csv('./Dataset/cleaned_pets_data.csv')
pets <- pets[c('Time_Spent', 'Age', 'Group')]
#70/30 split
train <- pets[1:1145,]
test <- pets[1145:1636,]
#Set as factor
train$Group <- factor(train$Group,levels=c("Hounding","Toy","Working", "Terrier", "Herding","Sporting"))
contrasts(train$Group) <- contr.sum(6) #Creates the effect codings
#contrasts(train$Group)
attach(train)
summary(Time_Spent)
summary(Group)
summary(Age)
#Log the response and age variable
train$Time_Spent <- log(train$Time_Spent, 10)
train$Age <- log(train$Age, 10)
train[mapply(is.infinite, train)] <- 0
colnames(train)[c(1,2)] <- c('log_Time_Spent', 'log_Age')
attach(train)
##Lets go through constant shift model first
aov1 <- aov(log_Time_Spent ~ log_Age + Group, data=train)
coef(aov1)
Anova(aov1, type=3)
fit1 <- lm(log_Time_Spent ~ log_Age + Group, data=train)
summary(fit1)
#A typical dog is 82.38 months old (6.865 years)
#Hounding breed for a typical s
model.tables(aov1,type = 'means', cterms="Group")
model.tables(aov1,cterms="Group")$tables$Group+coef(aov1)[1]+coef(aov1)[2]*mean(log_Age)
sapply(split(log_Time_Spent,Group),summary)
aov1.tukey <- glht(aov1, linfct=mcp(Group="Tukey"))
summary(aov1.tukey)
plot(cooks.distance(fit1))
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
##Ok we want to check variance of residuals now. Lets do a Levenes test + plot of category vs std_residuals
sresa = rstandard(aov1)
#Levene's Test
absres <- abs(sresa)
anova(lm(absres ~ Group, data=train))
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
wt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls <- aov(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
coef(aov_wls)
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
wt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls <- aov(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
wt
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
wt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls <- aov(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
wt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls <- aov(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
coef(aov_wls)
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
wt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls <- aov(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
wt
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
wt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls <- aov(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
wt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls <- aov(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
wt
##WLS should be used here
#Getting weights
groupsd <- sapply(split(sresa,train$Group),sd)
wt <- 1/(groupsd[as.numeric(train$Group)]^2)
aov_wls <- aov(log_Time_Spent ~ log_Age + Group, weight=wt, data=train)
coef(aov_wls)
